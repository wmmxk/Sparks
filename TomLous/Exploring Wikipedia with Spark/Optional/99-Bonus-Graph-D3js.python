{"version":"NotebookV1","origId":503877321546673,"name":"99-Bonus-Graph-D3js","language":"python","commands":[{"version":"CommandV1","origId":503877321546675,"guid":"18c4ecc5-5e9e-4895-a5d9-bf0ad011fbd7","subtype":"command","commandType":"auto","position":1.0,"command":"%md # <img width=\"300px\" src=\"http://cdn.arstechnica.net/wp-content/uploads/2015/09/2000px-Wikipedia-logo-v2-en-640x735.jpg\"/> Clickstream Analysis\n\n** Dataset: 3.2 billion requests collected during the month of February 2015 grouped by (src, dest) **\n\n** Source: https://datahub.io/dataset/wikipedia-clickstream/ **\n\n<img width=\"700px\" src=\"https://databricks-prod-cloudfront.s3.amazonaws.com/docs/images/ny.clickstream.png\"/>\n\n<i>*This notebook requires Spark 1.6+</i>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"49de4797-5224-4f2f-a46c-254355cc7093"},{"version":"CommandV1","origId":503877321546676,"guid":"ae440e56-2cb6-4c40-bd1b-f29b836697ee","subtype":"command","commandType":"auto","position":2.0,"command":"%md \n\n\nThis is a data analysis workflow developed with [Databricks Community Edition](https://databricks.com/blog/2016/02/17/introducing-databricks-community-edition-apache-spark-for-all.html), a free version of Databricks designed for learning [Apache Spark](https://spark.apache.org/).\n\nYou can [join the wait list](http://go.databricks.com/databricks-community-edition-beta-waitlist) for Community Edition today!","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"b748b929-915f-49a6-90c4-772b433e7870"},{"version":"CommandV1","origId":503877321546677,"guid":"6609de55-2dbe-4901-99a4-24333ad3dd7c","subtype":"command","commandType":"auto","position":3.0,"command":"%scala if (org.apache.spark.BuildInfo.sparkBranch < \"1.6\") sys.error(\"Attach this notebook to a cluster running Spark 1.6+\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"ede487bd-eb6a-4895-8380-d3dd9074ef5c"},{"version":"CommandV1","origId":503877321546678,"guid":"a07c7b67-e849-40da-b559-0200e910535f","subtype":"command","commandType":"auto","position":4.0,"command":"# Load the raw dataset stored as a CSV file\nclickstreamRaw = sqlContext.read \\\n  .format(\"com.databricks.spark.csv\") \\\n  .options(header=\"true\", delimiter=\"\\t\", mode=\"PERMISSIVE\", inferSchema=\"true\") \\\n  .load(\"dbfs:///databricks-datasets/wikipedia-datasets/data-001/clickstream/raw-uncompressed\")\n  \n# Convert the dataset to a more efficent format to speed up our analysis\nclickstreamRaw.write \\\n  .mode(\"overwrite\") \\\n  .format(\"parquet\") \\\n  .save(\"/datasets/wiki-clickstream\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"a7db5b85-97c8-4639-aa7b-4a0c50f44d40"},{"version":"CommandV1","origId":503877321546679,"guid":"0b97a1ca-1d56-4fec-9ba9-a592f6c080c1","subtype":"command","commandType":"auto","position":5.0,"command":"clicks = sqlContext.read.parquet(\"/datasets/wiki-clickstream\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"db41628a-4090-428d-adbb-cc81848d72fa"},{"version":"CommandV1","origId":503877321546680,"guid":"565ef83a-80ea-4328-a76f-6765c9b86feb","subtype":"command","commandType":"auto","position":6.0,"command":"all_clicks = clicks.selectExpr(\"sum(n) AS clicks\").first().clicks\nwiki_clicks = clicks.where(\"prev_id IS NOT NULL\").selectExpr(\"sum(n) AS clicks\").first().clicks\nfloat(wiki_clicks) / all_clicks * 100","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"5b6531fb-2a26-4657-b645-43e86eba5e48"},{"version":"CommandV1","origId":503877321546681,"guid":"114aa4d2-fa9f-415a-9e15-ed89fa344f9b","subtype":"command","commandType":"auto","position":7.0,"command":"# Make clicks available as a SQL table.\nclicks.registerTempTable(\"clicks\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"64b2b0d4-441d-459c-8c9a-fa441e704992"},{"version":"CommandV1","origId":503877321546682,"guid":"949ffe41-1f1f-4a1d-98f3-56b1e9238848","subtype":"command","commandType":"auto","position":8.0,"command":"%sql   \nSELECT *\nFROM clicks\nWHERE \n  curr_title = 'Donald_Trump' AND\n  prev_id IS NOT NULL AND prev_title != 'Main_Page'\nORDER BY n DESC\nLIMIT 20","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"75710d77-5d2f-4c6c-983e-ea79c3c3344c"},{"version":"CommandV1","origId":503877321546683,"guid":"cf0df2b9-7887-44d7-8cde-458f3135c7d8","subtype":"command","commandType":"auto","position":9.0,"command":"%scala\npackage d3\n// We use a package object so that we can define top level classes like Edge that need to be used in other cells\n\nimport org.apache.spark.sql._\nimport com.databricks.backend.daemon.driver.EnhancedRDDFunctions.displayHTML\n\ncase class Edge(src: String, dest: String, count: Long)\n\ncase class Node(name: String)\ncase class Link(source: Int, target: Int, value: Long)\ncase class Graph(nodes: Seq[Node], links: Seq[Link])\n\nobject graphs {\nval sqlContext = SQLContext.getOrCreate(org.apache.spark.SparkContext.getOrCreate())  \nimport sqlContext.implicits._\n  \ndef force(clicks: Dataset[Edge], height: Int = 100, width: Int = 960): Unit = {\n  val data = clicks.collect()\n  val nodes = (data.map(_.src) ++ data.map(_.dest)).map(_.replaceAll(\"_\", \" \")).toSet.toSeq.map(Node)\n  val links = data.map { t =>\n    Link(nodes.indexWhere(_.name == t.src.replaceAll(\"_\", \" \")), nodes.indexWhere(_.name == t.dest.replaceAll(\"_\", \" \")), t.count / 20 + 1)\n  }\n  showGraph(height, width, Seq(Graph(nodes, links)).toDF().toJSON.first())\n}\n\n/**\n * Displays a force directed graph using d3\n * input: {\"nodes\": [{\"name\": \"...\"}], \"links\": [{\"source\": 1, \"target\": 2, \"value\": 0}]}\n */\ndef showGraph(height: Int, width: Int, graph: String): Unit = {\n\ndisplayHTML(s\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n  <title>Polish Books Themes - an Interactive Map</title>\n  <meta charset=\"utf-8\">\n<style>\n\n.node_circle {\n  stroke: #777;\n  stroke-width: 1.3px;\n}\n\n.node_label {\n  pointer-events: none;\n}\n\n.link {\n  stroke: #777;\n  stroke-opacity: .2;\n}\n\n.node_count {\n  stroke: #777;\n  stroke-width: 1.0px;\n  fill: #999;\n}\n\ntext.legend {\n  font-family: Verdana;\n  font-size: 13px;\n  fill: #000;\n}\n\n.node text {\n  font-family: \"Helvetica Neue\",\"Helvetica\",\"Arial\",sans-serif;\n  font-size: 17px;\n  font-weight: 200;\n}\n\n</style>\n</head>\n\n<body>\n<script src=\"//d3js.org/d3.v3.min.js\"></script>\n<script>\n\nvar graph = $graph;\n\nvar width = $width,\n    height = $height;\n\nvar color = d3.scale.category20();\n\nvar force = d3.layout.force()\n    .charge(-700)\n    .linkDistance(180)\n    .size([width, height]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n    \nforce\n    .nodes(graph.nodes)\n    .links(graph.links)\n    .start();\n\nvar link = svg.selectAll(\".link\")\n    .data(graph.links)\n    .enter().append(\"line\")\n    .attr(\"class\", \"link\")\n    .style(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\nvar node = svg.selectAll(\".node\")\n    .data(graph.nodes)\n    .enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .call(force.drag);\n\nnode.append(\"circle\")\n    .attr(\"r\", 10)\n    .style(\"fill\", function (d) {\n    if (d.name.startsWith(\"other\")) { return color(1); } else { return color(2); };\n})\n\nnode.append(\"text\")\n      .attr(\"dx\", 10)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.name });\n      \n//Now we are giving the SVGs co-ordinates - the force layout is generating the co-ordinates which this code is using to update the attributes of the SVG elements\nforce.on(\"tick\", function () {\n    link.attr(\"x1\", function (d) {\n        return d.source.x;\n    })\n        .attr(\"y1\", function (d) {\n        return d.source.y;\n    })\n        .attr(\"x2\", function (d) {\n        return d.target.x;\n    })\n        .attr(\"y2\", function (d) {\n        return d.target.y;\n    });\n    d3.selectAll(\"circle\").attr(\"cx\", function (d) {\n        return d.x;\n    })\n        .attr(\"cy\", function (d) {\n        return d.y;\n    });\n    d3.selectAll(\"text\").attr(\"x\", function (d) {\n        return d.x;\n    })\n        .attr(\"y\", function (d) {\n        return d.y;\n    });\n});\n</script>\n</html>\n\"\"\")\n}\n  \n  def help() = {\ndisplayHTML(\"\"\"\n<p>\nProduces a force-directed graph given a collection of edges of the following form:</br>\n<tt><font color=\"#a71d5d\">case class</font> <font color=\"#795da3\">Edge</font>(<font color=\"#ed6a43\">src</font>: <font color=\"#a71d5d\">String</font>, <font color=\"#ed6a43\">dest</font>: <font color=\"#a71d5d\">String</font>, <font color=\"#ed6a43\">count</font>: <font color=\"#a71d5d\">Long</font>)</tt>\n</p>\n<p>Usage:<br/>\n<tt>%scala</tt></br>\n<tt><font color=\"#a71d5d\">import</font> <font color=\"#ed6a43\">d3._</font></tt><br/>\n<tt><font color=\"#795da3\">graphs.force</font>(</br>\n&nbsp;&nbsp;<font color=\"#ed6a43\">height</font> = <font color=\"#795da3\">500</font>,<br/>\n&nbsp;&nbsp;<font color=\"#ed6a43\">width</font> = <font color=\"#795da3\">500</font>,<br/>\n&nbsp;&nbsp;<font color=\"#ed6a43\">clicks</font>: <font color=\"#795da3\">Dataset</font>[<font color=\"#795da3\">Edge</font>])</tt>\n</p>\"\"\")\n  }\n}","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"a506ba66-68de-4181-9ed7-cbbea3fdacb5"},{"version":"CommandV1","origId":503877321546684,"guid":"5459717f-481f-406b-b5a8-98785d035964","subtype":"command","commandType":"auto","position":10.0,"command":"%scala \n// print the help for the graphing library\nd3.graphs.help()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"7e9411bd-d7ba-4e89-bf42-c23030542e76"},{"version":"CommandV1","origId":503877321546685,"guid":"1008af86-3249-40db-942d-32fd2547727a","subtype":"command","commandType":"auto","position":11.0,"command":"%scala\nimport d3._\n\ngraphs.force(\n  height = 800,\n  width = 1000,\n  clicks = sql(\"\"\"\n    SELECT \n      prev_title AS src,\n      curr_title AS dest,\n      n AS count FROM clicks\n    WHERE \n      curr_title IN ('Donald_Trump', 'Bernie_Sanders', 'Hillary_Rodham_Clinton', 'Ted_Cruz') AND\n      prev_id IS NOT NULL AND NOT (curr_title = 'Main_Page' OR prev_title = 'Main_Page')\n    ORDER BY n DESC\n    LIMIT 20\"\"\").as[Edge])","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"910ccac7-9c35-4048-a216-9e6162817007"},{"version":"CommandV1","origId":503877321546686,"guid":"5ac14478-26b5-4521-a1e1-9779a376626b","subtype":"command","commandType":"auto","position":12.0,"command":"%scala\nimport d3._\n\ngraphs.force(\n  height = 800,\n  width = 1000,\n  clicks = sql(\"\"\"\n    SELECT \n      prev_title AS src,\n      curr_title AS dest,\n      n AS count FROM clicks\n    WHERE \n      curr_title IN ('Apache_Spark', 'Apache_Hadoop', 'Apache_Cassandra', 'Apache_Tomcat', 'Apache_HTTP_Server') AND\n      prev_id IS NOT NULL AND NOT (curr_title = 'Main_Page' OR prev_title = 'Main_Page')\n    ORDER BY n DESC\n    LIMIT 20\"\"\").as[Edge])","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"172dd9dc-2f7e-4d7b-96ec-a60b09981e9f"},{"version":"CommandV1","origId":503877321546687,"guid":"5dc769cd-94d3-43cd-9f7f-9ae729cf8328","subtype":"command","commandType":"auto","position":13.0,"command":"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"38a8be6e-bd18-4bde-be64-5b2185759ac6"}],"dashboards":[],"guid":"4b95bf13-ce0a-4282-885f-2a8d617a9657","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}