{"version":"NotebookV1","origId":503877321549176,"name":"30-1D-Linear-Power-Plant","language":"scala","commands":[{"version":"CommandV1","origId":503877321549178,"guid":"e25a7c1b-8902-44f3-9e7d-dc03f012aedc","subtype":"command","commandType":"auto","position":1.0,"command":"%md #Power Plant ML Pipeline Application\n\n*We are trying to predict power output given a set of readings from various sensors in a gas-fired power generation plant.  Power generation is a complex process, and understanding and predicting power output is an important element in managing a plant and its connection to the power grid.*\n\nMore information about Peaker or Peaking Power Plants can be found on Wikipedia https://en.wikipedia.org/wiki/Peaking_power_plant\n\nGiven this business problem, we need to translate it to a Machine Learning task.  The ML task is regression since the label (or target) we are trying to predict is numeric.\n\nThe example data is provided by UCI at [UCI Machine Learning Repository Combined Cycle Power Plant Data Set](https://archive.ics.uci.edu/ml/datasets/Combined+Cycle+Power+Plant)\n\nYou can read the background on the UCI page, but in summary we have collected a number of readings from sensors at a Gas Fired Power Plant (also called a Peaker Plant) and now we want to use those sensor readings to predict how much power the plant will generate.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"3ae5751a-6a4b-43f4-b7c3-99b8d16dc8a1"},{"version":"CommandV1","origId":503877321549179,"guid":"f4841abf-1c7d-4b00-8fd6-23941b5a9b15","subtype":"command","commandType":"auto","position":2.0,"command":"%md ####What Sort of Problem? What Kind of Algorithms?\n\nThe problem is a regression problem since the label (or target) we are trying to predict is numeric and continuous","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"732c2350-7d3b-468a-9199-25c8cd998baa"},{"version":"CommandV1","origId":503877321549180,"guid":"4d34e1ab-3184-49ae-ac09-09a0f0c5a70f","subtype":"command","commandType":"auto","position":3.0,"command":"%md ####Load Your Data\nNow that we understand what we are trying to do, we need to load our data and describe it, explore it and verify it.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"b7129f08-f29b-454e-b777-bfcdd93c1be4"},{"version":"CommandV1","origId":503877321549181,"guid":"aa0a98e6-5a54-4088-abe4-6a209656308d","subtype":"command","commandType":"auto","position":4.0,"command":"spark.read.text(\"dbfs:/databricks-datasets/power-plant/data/\").show","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"850a2c24-2db2-4906-95d0-4e50344e352c"},{"version":"CommandV1","origId":503877321549182,"guid":"ebf099db-271d-44c6-9311-9e5454fc010e","subtype":"command","commandType":"auto","position":5.0,"command":"val data = spark.read\n  .option(\"delimiter\", \"\\\\t\")\n  .option(\"header\", true)\n  .option(\"inferSchema\", true)\n  .csv(\"dbfs:/databricks-datasets/power-plant/data/\")\n\ndata.show","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"c7dbde44-a5c4-4ffa-915b-128ced7d0861"},{"version":"CommandV1","origId":503877321549183,"guid":"e5b9351a-cdb6-4a0e-b254-2881e4b22dc3","subtype":"command","commandType":"auto","position":6.0,"command":"%md **Schema Definition**\n\nOur schema definition from UCI appears below:\n\n- AT = Atmospheric Temperature in C\n- V = Exhaust Vaccum Speed\n- AP = Atmospheric Pressure\n- RH = Relative Humidity\n- PE = Power Output\n\nPE is our label or target. This is the value we are trying to predict given the measurements.\n\n*Reference [UCI Machine Learning Repository Combined Cycle Power Plant Data Set](https://archive.ics.uci.edu/ml/datasets/Combined+Cycle+Power+Plant)*","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"cc9ceb79-bfed-4ab2-bbf0-ed3df16f7d19"},{"version":"CommandV1","origId":503877321549184,"guid":"7218fc03-c50f-4faa-8d5c-637f730efe8f","subtype":"command","commandType":"auto","position":7.0,"command":"data.selectExpr(\"AT as temp\", \"PE as output\").createOrReplaceTempView(\"power\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"63518870-4b1d-4b2a-b03f-2b95ad1efbff"},{"version":"CommandV1","origId":503877321549185,"guid":"06dcb8a3-4883-4a75-a5e3-cdb9c59d4491","subtype":"command","commandType":"auto","position":8.0,"command":"%sql SELECT * FROM power","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"2f911f40-6807-4066-a2cb-b8fd63325115"},{"version":"CommandV1","origId":503877321549186,"guid":"66dae698-9a7d-4b7d-adaf-22814ec4e616","subtype":"command","commandType":"auto","position":9.0,"command":"display(spark.table(\"power\").describe())","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"f3bc4cd3-346f-40db-b3c5-8905413b480d"},{"version":"CommandV1","origId":503877321549187,"guid":"8068009c-4b7a-451f-921a-188275ced4b4","subtype":"command","commandType":"auto","position":10.0,"command":"import org.apache.spark.ml.linalg._\n\nval oneElementVec = spark.udf.register(\"oneElementVec\", (d:Double) => Vectors.dense(Array(d)))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"c8b2052e-b431-4f40-9419-413323a96f19"},{"version":"CommandV1","origId":503877321549188,"guid":"ede91fba-608a-47c8-9c32-331e606149d0","subtype":"command","commandType":"auto","position":11.0,"command":"%md This approach is straightforward but not ideal... Wouldn't it be nice\n\n1. ... if simple feature-processing tasks like this were available within Spark? or in a standard way within other open source libraries?\n\n2. ... to do common feature-processing operations at a higher level of abstraction?\n\n3. ... to encapsulate a set of processing operations with less repetitive code?\n\nIn fact, the API is design to meet these goals, and we'll look at that shortly. This example helps motivate *why* those APIs are set up as they are.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"69f4b2d6-f39a-45a7-b794-0653e7b24f15"},{"version":"CommandV1","origId":503877321549189,"guid":"7285ff0b-c046-4a92-a64a-ef5b219d0a60","subtype":"command","commandType":"auto","position":12.0,"command":"val dataset = sqlContext.table(\"power\").selectExpr(\"output as label\", \"oneElementVec(temp) as features\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"73f3073b-e35c-48dd-9e36-f3f3af215c24"},{"version":"CommandV1","origId":503877321549190,"guid":"ee78a53d-1371-40cc-891b-bd9da2ba120b","subtype":"command","commandType":"auto","position":13.0,"command":"dataset.show","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"40f2746e-2165-4b52-a68b-3e03740a8eb7"},{"version":"CommandV1","origId":503877321549191,"guid":"05f11cff-70ac-4cc5-9aca-54551b7360f7","subtype":"command","commandType":"auto","position":14.0,"command":"// First let's hold out 20% of our data for testing and leave 80% for training\nvar Array(split20, split80) = dataset.randomSplit(Array(0.20, 0.80), 1800009193L)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"a0bbff55-6228-4d4f-9cd4-40909ff979f0"},{"version":"CommandV1","origId":503877321549192,"guid":"75ab0fbb-3bf8-4537-acf5-fe45bbe96565","subtype":"command","commandType":"auto","position":15.0,"command":"// Let's cache these datasets for performance\nval testSet = split20.cache()\nval trainingSet = split80.cache()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"962294d6-1db2-45b9-9ede-a1d1882010f6"},{"version":"CommandV1","origId":503877321549193,"guid":"75dc0615-e2de-4c69-9e58-8a47428fbe24","subtype":"command","commandType":"auto","position":16.0,"command":"import org.apache.spark.ml.regression.LinearRegression\nimport org.apache.spark.ml.regression.LinearRegressionModel\n\nval lr = new LinearRegression()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"edf805f4-3488-4238-a1e7-c7c75095c89b"},{"version":"CommandV1","origId":503877321549194,"guid":"bd950389-2229-4536-936f-504342857238","subtype":"command","commandType":"auto","position":17.0,"command":"// Let's first train on the entire dataset to see what we get\nval lrModel = lr.fit(trainingSet)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"ee1bf0cf-2c48-4294-bd81-cbf76e37ca0b"},{"version":"CommandV1","origId":503877321549195,"guid":"12ded25d-f2d5-4203-941b-2beab66337e6","subtype":"command","commandType":"auto","position":18.0,"command":"val predictionsAndLabels = lrModel.transform(testSet)\n\ndisplay(predictionsAndLabels)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"6d9fb7d2-31b9-44b6-b5a3-1a8269e99f68"},{"version":"CommandV1","origId":503877321549196,"guid":"0c1a1a72-d67f-4c89-a7b9-3ebbf4bdfbe2","subtype":"command","commandType":"auto","position":19.0,"command":"display(predictionsAndLabels.selectExpr(\"prediction - label\"))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"9c1e416e-9158-4636-beca-a781351d598f"},{"version":"CommandV1","origId":503877321549197,"guid":"05e8a925-e6b2-4389-be82-3ffb167ed613","subtype":"command","commandType":"auto","position":20.0,"command":"//Now let's compute some evaluation metrics against our test dataset\n\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\n\nval eval = new RegressionEvaluator()\n\neval.explainParams()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"f6253b4d-37b8-4329-aca5-c92cab6a27a9"},{"version":"CommandV1","origId":503877321549198,"guid":"3ea7846e-969a-4a40-af5f-5dac54a0dd07","subtype":"command","commandType":"auto","position":21.0,"command":"eval.setMetricName(\"r2\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"41c3f943-28a6-48fd-a2ea-8f5ffbc62cf5"},{"version":"CommandV1","origId":503877321549199,"guid":"821dcd51-cf1a-445b-97a9-98d70f415c04","subtype":"command","commandType":"auto","position":22.0,"command":"eval.evaluate(predictionsAndLabels)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"f0a76c28-cfff-4941-afb1-eb2a47cf8215"},{"version":"CommandV1","origId":503877321549200,"guid":"cac8e665-187e-40db-a209-dc7c5ea3969c","subtype":"command","commandType":"auto","position":23.0,"command":"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"389be104-e0a9-4717-8431-47872601e994"}],"dashboards":[],"guid":"b6d3e7a4-fdc0-46d0-9dc6-149f2dc6ae77","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}