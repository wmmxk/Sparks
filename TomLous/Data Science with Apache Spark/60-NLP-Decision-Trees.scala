{"version":"NotebookV1","origId":503877321549137,"name":"60-NLP-Decision-Trees","language":"scala","commands":[{"version":"CommandV1","origId":503877321549139,"guid":"5b023021-3ec6-46bc-ab5a-66481454eeb7","subtype":"command","commandType":"auto","position":1.0,"command":"%md ##Document Classification using Decision Trees\n\nThis notebook will provide a brief algorithm summary, links for further reading, and an example of how to use Decision Trees for Document Classification.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"f5fba363-bad9-4ba1-8af7-913e3c5a6edd"},{"version":"CommandV1","origId":503877321549140,"guid":"bb22484e-44e9-4ef6-88ee-b68ea6127f53","subtype":"command","commandType":"auto","position":2.0,"command":"%md ####Reviewing our Data\n\nIn this example, we will use the mini 20 Newsgroups dataset, which is a random subset of the original 20 Newsgroups dataset. Each newsgroup is stored in a subdirectory, with each article stored as a separate file.\n\nThe mini dataset consists of 100 articles from the following 20 Usenet newsgroups:\n\nalt.atheism\ncomp.graphics\ncomp.os.ms-windows.misc\ncomp.sys.ibm.pc.hardware\ncomp.sys.mac.hardware\ncomp.windows.x\nmisc.forsale\nrec.autos\nrec.motorcycles\nrec.sport.baseball\nrec.sport.hockey\nsci.crypt\nsci.electronics\nsci.med\nsci.space\nsoc.religion.christian\ntalk.politics.guns\ntalk.politics.mideast\ntalk.politics.misc\ntalk.religion.misc\n\nSome of the newsgroups seem pretty similar on first glance, such as comp.sys.ibm.pc.hardware and comp.sys.mac.hardware, which may affect our results.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"cbaaeb9a-00ce-4c23-8e5e-f86a58a2906c"},{"version":"CommandV1","origId":503877321549141,"guid":"8fd49f93-2a1e-4c5e-976a-b1ed94745ffb","subtype":"command","commandType":"auto","position":3.0,"command":"val corpus = spark.read.parquet(\"/databricks-datasets/news20.binary/data-001/training\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"944b98f4-47cd-49e9-9f15-aabe6f0b37c0"},{"version":"CommandV1","origId":503877321549142,"guid":"ca6a1e24-a282-44da-abb6-5c097cff8b9a","subtype":"command","commandType":"auto","position":4.0,"command":"display(corpus)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"f190ae4b-4002-4d2c-b1f3-04d8031a1352"},{"version":"CommandV1","origId":503877321549143,"guid":"7e45c03f-2675-48a2-b674-db44787e4372","subtype":"command","commandType":"auto","position":5.0,"command":"corpus.printSchema","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"0c5cd095-3a65-41b7-801f-f27aa5836dae"},{"version":"CommandV1","origId":503877321549144,"guid":"f0a36f14-ed3b-4d98-9c71-cff4f34ca630","subtype":"command","commandType":"auto","position":6.0,"command":"val corpusDF = corpus.drop('label).drop('id).withColumnRenamed(\"topic\", \"label\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"44db8b0d-f168-4ec0-9927-a281cc380cda"},{"version":"CommandV1","origId":503877321549145,"guid":"d4dd8ba7-559e-41aa-9356-c16614372814","subtype":"command","commandType":"auto","position":7.0,"command":"corpusDF.select('text).as[String].first","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"b183e234-0e77-4f5d-8849-a6e9f5f9e97e"},{"version":"CommandV1","origId":503877321549146,"guid":"252d5e5a-646e-4549-91e6-7f805ff4354c","subtype":"command","commandType":"auto","position":8.0,"command":"%md ####Text Tokenization\n\nWe will use the RegexTokenizer to split each document into tokens. We can setMinTokenLength() here to indicate a minimum token length, and filter away all tokens that fall below the minimum.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"72ce861d-0028-4e46-8fee-e1e995700faf"},{"version":"CommandV1","origId":503877321549147,"guid":"00c62b4c-f757-4dcf-ae81-9e12a328c85d","subtype":"command","commandType":"auto","position":9.0,"command":"import org.apache.spark.ml.feature.RegexTokenizer\n\nval tokenizer = new RegexTokenizer()\n  .setPattern(\"[\\\\W_]+\")\n  .setMinTokenLength(4) // Filter away tokens with length < 4\n  .setInputCol(\"text\")\n  .setOutputCol(\"tokens\")\n\n// Tokenize document\nval tokenizedDF = tokenizer.transform(corpusDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"3ee07da5-64bf-4ff2-9708-cab2c69c10ea"},{"version":"CommandV1","origId":503877321549148,"guid":"6a83a2e3-fd73-46d3-9704-4a9fcadd839f","subtype":"command","commandType":"auto","position":10.0,"command":"display(tokenizedDF.select(\"tokens\"))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"165dacb2-890d-46ff-ad03-7267175a1727"},{"version":"CommandV1","origId":503877321549149,"guid":"8a3ad9e5-bb30-478f-9fc0-8c2f396ec74e","subtype":"command","commandType":"auto","position":11.0,"command":"%md #####Remove Stopwords\n\nWe can easily remove stopwords using the StopWordsRemover(). If a list of stopwords is not provided, the StopWordsRemover() will use this list of stopwords by default. You can use getStopWords() to see the list of stopwords that will be used.\n\nIn this example, we will specify a list of stopwords for the StopWordsRemover() to use. We do this so that we can add on to the list later on.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"45249023-1afc-46fd-bc90-52b7c454bde8"},{"version":"CommandV1","origId":503877321549150,"guid":"a31ca953-b1dd-4fb0-b15f-daf6dec448d2","subtype":"command","commandType":"auto","position":12.0,"command":"// List of stopwords\nval stopwords = sc.textFile(\"/mnt/training/stopwords\").collect()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"44b53842-b5aa-4f8a-823c-2dde7d476ea4"},{"version":"CommandV1","origId":503877321549151,"guid":"d5d2e4be-e0aa-4358-a0ce-f7ded1d35e32","subtype":"command","commandType":"auto","position":13.0,"command":"import org.apache.spark.ml.feature.StopWordsRemover\n\n// Set params for StopWordsRemover\n\nval remover = new StopWordsRemover()\n  .setStopWords(stopwords) // This parameter is optional\n  .setInputCol(\"tokens\")\n  .setOutputCol(\"filtered\")\n\n// Create new DF with Stopwords removed\n\nval filteredDF = remover.transform(tokenizedDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"02017da0-7ad9-4059-990e-d5cb8c0301d0"},{"version":"CommandV1","origId":503877321549152,"guid":"bdaa6f58-8a88-4914-b719-e3b7943f149a","subtype":"command","commandType":"auto","position":14.0,"command":"filteredDF.show(5)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"2cfd0eeb-75c1-4dc8-9cd6-0c62c7aeb333"},{"version":"CommandV1","origId":503877321549153,"guid":"e1993824-6754-46b8-8849-89312dab9eb8","subtype":"command","commandType":"auto","position":15.0,"command":"import org.apache.spark.ml.feature.{StringIndexer, IndexToString, VectorIndexer}\n\n// Index labels, adding metadata to the label column.\n// Fit on whole dataset to include all labels in index.\nval labelIndexer = new StringIndexer()\n  .setInputCol(\"label\")\n  .setOutputCol(\"indexedLabel\")\n  .setHandleInvalid(\"skip\")\n  .fit(filteredDF)\n\n// val indexedCorpus = labelIndexer.transform(filteredDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"bbbe5f4d-5849-4f65-81c3-abee06d5124e"},{"version":"CommandV1","origId":503877321549154,"guid":"2ed29fd5-feb5-4405-a4ac-0377437e41ce","subtype":"command","commandType":"auto","position":16.0,"command":"filteredDF.printSchema","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"6ec2ec51-7591-4e3f-a09d-7cb654dd0643"},{"version":"CommandV1","origId":503877321549155,"guid":"add1a9ba-5a80-40be-9bd5-cc18986fb955","subtype":"command","commandType":"auto","position":17.0,"command":"%md We no longer need the original tokens","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"364a38ed-9fc0-4926-87c1-ad6d35c27dc7"},{"version":"CommandV1","origId":503877321549156,"guid":"94a0a57c-4957-4bc3-870c-d7e9ef529810","subtype":"command","commandType":"auto","position":18.0,"command":"// case class DocVector(label: String, content: String, tokens: Vector.dense)\nval finalDF = filteredDF.drop($\"tokens\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"bee1e6d6-f687-41b5-9376-85790dfdbd4b"},{"version":"CommandV1","origId":503877321549157,"guid":"02a67edf-f08a-44b8-8878-4e76abd8ae39","subtype":"command","commandType":"auto","position":19.0,"command":"import org.apache.spark.ml.feature.CountVectorizer\n\n// Set params for CountVectorizer\n\nval vectorizer = new CountVectorizer()\n  .setInputCol(\"filtered\")\n  .setOutputCol(\"features\")\n  .setVocabSize(10000)\n  .fit(finalDF)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"3e62bf73-2cf9-4ff8-9a0c-430b1cf50583"},{"version":"CommandV1","origId":503877321549158,"guid":"7230089a-8dd6-4843-865c-9e622a0c9e32","subtype":"command","commandType":"auto","position":20.0,"command":"%md Divide the data into a training and a test set","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"36b74e4b-6aad-49e8-b909-33431dc28553"},{"version":"CommandV1","origId":503877321549159,"guid":"15918d56-4ff9-4af2-b146-53705cc773fb","subtype":"command","commandType":"auto","position":21.0,"command":"// Split the data into training and test sets (30% held out for testing)\nval Array(trainingData, testData) = finalDF.randomSplit(Array(0.8, 0.2))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"c90de7cb-04e0-4b80-bafa-69db3e593fff"},{"version":"CommandV1","origId":503877321549160,"guid":"cc878624-9a08-42a0-b9fe-27975f59f509","subtype":"command","commandType":"auto","position":22.0,"command":"%md Create the Decision Tree","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"1d5c8919-bd65-4c39-99c5-c7facbf5376a"},{"version":"CommandV1","origId":503877321549161,"guid":"c376ab1b-5321-4d02-9f9e-74c1ce4322f5","subtype":"command","commandType":"auto","position":23.0,"command":"import org.apache.spark.ml.classification.DecisionTreeClassifier\nimport org.apache.spark.ml.classification.DecisionTreeClassificationModel\n\n// Train a DecisionTree model\n\nval dt = new DecisionTreeClassifier()\n  .setLabelCol(\"indexedLabel\")\n  .setFeaturesCol(\"features\")\n  .setMaxDepth(16)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"6bfd46ed-50b9-43c7-beb2-372798d805c5"},{"version":"CommandV1","origId":503877321549162,"guid":"81851c1f-0ef1-47d0-b3c8-b8de9afa5170","subtype":"command","commandType":"auto","position":24.0,"command":"%md Create the converter to convert the labels back","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"acf99f10-1ee9-47e5-9001-86916b252b47"},{"version":"CommandV1","origId":503877321549163,"guid":"2ce391ae-ec6d-4c19-ae0e-38816beb8147","subtype":"command","commandType":"auto","position":25.0,"command":"// Convert indexed labels back to original labels.\nval labelConverter = new IndexToString()\n  .setInputCol(\"prediction\")\n  .setOutputCol(\"predictedLabel\")\n  .setLabels(labelIndexer.labels)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"59fc614d-1bd7-4aa1-b6fd-ad6ab6c127b3"},{"version":"CommandV1","origId":503877321549164,"guid":"5010b64f-76c8-49c8-8201-3cfea89ca018","subtype":"command","commandType":"auto","position":26.0,"command":"%md Create the ML Pipeline with four stages","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"5798e0b1-f87b-4b65-9821-6b80a569bb51"},{"version":"CommandV1","origId":503877321549165,"guid":"dd412207-caab-4903-a923-af26ec604a31","subtype":"command","commandType":"auto","position":27.0,"command":"import org.apache.spark.ml.Pipeline\n\n// Chain indexers and tree in a Pipeline\nval pipeline = new Pipeline()\n  .setStages(Array(labelIndexer, vectorizer, dt, labelConverter))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"84be9a5a-5af8-4524-bfe0-5e40d7785929"},{"version":"CommandV1","origId":503877321549166,"guid":"59add5af-e3c8-493c-86c7-a6c6dcd438a2","subtype":"command","commandType":"auto","position":28.0,"command":"// Train model.  This also runs the indexers. ... Takes ~ 2-3 min on CE\nval model = pipeline.fit(trainingData)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"16a0e21b-d962-43d0-8c81-5041c0326848"},{"version":"CommandV1","origId":503877321549167,"guid":"33c075bc-4706-45e6-aa97-ae3c8b985426","subtype":"command","commandType":"auto","position":29.0,"command":"%md Let us check the stages of the model we just run.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"1f4c0352-1327-4afa-9f8e-8bdbcc5bf130"},{"version":"CommandV1","origId":503877321549168,"guid":"6665438d-4298-4c67-9d5b-db922b21270e","subtype":"command","commandType":"auto","position":30.0,"command":"model.stages","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"c3e92aad-51d3-4148-96f4-e1b71713a830"},{"version":"CommandV1","origId":503877321549169,"guid":"64084b67-33d0-4832-a9b0-22120eb593ff","subtype":"command","commandType":"auto","position":31.0,"command":"%md Next, apply the model trained to the test set.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"b5322aa9-7ffd-48ff-b790-4e5aa4cdcf32"},{"version":"CommandV1","origId":503877321549170,"guid":"c2d04d9e-87ea-412c-853a-39b022df2dce","subtype":"command","commandType":"auto","position":32.0,"command":"// Make predictions\nval predictions = model.transform(testData)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"ca6ce307-1676-488c-b10b-f28b84992cb7"},{"version":"CommandV1","origId":503877321549171,"guid":"60e14e77-c17d-4828-8b9f-ede91109357b","subtype":"command","commandType":"auto","position":33.0,"command":"%md Take a look at the predictions. Not great. Why? Is it our model? Or is it something else?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"6c97241b-47a5-4b9e-b132-2b3f1c8b2988"},{"version":"CommandV1","origId":503877321549172,"guid":"d932fcba-a019-4b23-9528-26d7bbf116e1","subtype":"command","commandType":"auto","position":34.0,"command":"predictions.select(\"predictedLabel\", \"label\", \"features\").show(200)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"556fdf4b-719e-4a69-a100-dd881ad7f179"},{"version":"CommandV1","origId":503877321549173,"guid":"d7140ce5-8850-4e84-aa41-66548bc4eb8b","subtype":"command","commandType":"auto","position":35.0,"command":"%md Next, an evaluator is created to assess the results","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"da50a034-816c-4ad7-ab7e-67d84f1ba5dd"},{"version":"CommandV1","origId":503877321549174,"guid":"8b4f050b-4a1e-4b54-b709-12501f095dd5","subtype":"command","commandType":"auto","position":36.0,"command":"import org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\n// Select (prediction, true label) and compute test error\nval evaluator = new MulticlassClassificationEvaluator()\n  .setLabelCol(\"indexedLabel\")\n  .setPredictionCol(\"prediction\")\n  .setMetricName(\"accuracy\")\nval accuracy = evaluator.evaluate(predictions)\nprintln(\"Test Accuracy = \" + accuracy)\n\nval treeModel = model.stages(2).asInstanceOf[DecisionTreeClassificationModel]\nprintln(\"Learned classification tree model:\\n\" + treeModel.toDebugString)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"ae5238b7-4c8b-40da-951a-f7980e97a900"},{"version":"CommandV1","origId":503877321549175,"guid":"0f14ada5-ff88-42ce-9874-9b1388018e4d","subtype":"command","commandType":"auto","position":37.0,"command":"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"7ec6565d-1a00-4564-8eff-271597a9c656"}],"dashboards":[],"guid":"af320374-a12c-4f8d-baee-d6214845020c","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}