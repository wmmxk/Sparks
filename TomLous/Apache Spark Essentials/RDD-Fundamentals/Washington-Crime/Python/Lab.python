{"version":"NotebookV1","origId":503877321548760,"name":"Lab","language":"python","commands":[{"version":"CommandV1","origId":503877321548762,"guid":"a190e8aa-59aa-4f88-932c-56405a88d4b1","subtype":"command","commandType":"auto","position":1.0,"command":"%md\n# RDD Lab (Python)\n\nIn this lab, we'll explore some of the RDD concepts we've discussed. We'll be using a data set consisting of reported crimes in Washington D.C. from October 3, 2015 through October 2, 2016. This data comes from the [District of Columbia's Open Data Catalog](http://data.octo.dc.gov/). We'll use this data to explore some RDD transitions and actions.\n\n## Exercises and Solutions\n\nThis notebook contains a number of exercises. Use the \n<a href=\"http://spark.apache.org/docs/1.6.1/api/python/pyspark.html#pyspark.RDD\" target=\"_blank\">RDD API documentation</a>\nto look up transformations and actions. If, at any point, you're struggling with the solution to an exercise, feel free to look in the **Solutions** notebook (in the same folder as this lab).\n\n## Let's get started.\n\nFirst, let's import a couple things we'll need.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"edef5b8c-ab7a-489f-8b16-3ec914a02c49"},{"version":"CommandV1","origId":503877321548763,"guid":"600f75fe-efb1-4e15-9f7e-07257c669b77","subtype":"command","commandType":"auto","position":2.0,"command":"from collections import namedtuple\nfrom pprint import pprint","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"9296eea5-c216-4268-b630-13ada9e4631a"},{"version":"CommandV1","origId":503877321548764,"guid":"328f8a96-c92d-4ebc-b8a2-1bb914abd4ce","subtype":"command","commandType":"auto","position":3.0,"command":"%md\n## Load the data\n\nThe next step is to load the data. Run the following cell to create an RDD containing the data.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"2d83f606-adbf-4d89-9c30-2cd09efc80b5"},{"version":"CommandV1","origId":503877321548765,"guid":"b539c2af-b298-47f5-8e54-9c1ef477adcd","subtype":"command","commandType":"auto","position":4.0,"command":"base_rdd = sc.textFile(\"dbfs:/mnt/training/wash_dc_crime_incidents_2015-10-03-to-2016-10-02.csv\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"827eba2e-556d-41dd-9780-b0d3702b3940"},{"version":"CommandV1","origId":503877321548766,"guid":"a4226d79-8133-4b50-83cb-542b871d5df9","subtype":"command","commandType":"auto","position":5.0,"command":"%md **Question**: Does the RDD _actually_ contain the data right now?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"90b3dc79-5156-4529-8b32-6cce501fcfae"},{"version":"CommandV1","origId":503877321548767,"guid":"8f2e9805-93c2-4768-bd81-8cc0d1d1c8db","subtype":"command","commandType":"auto","position":6.0,"command":"%md\n## Explore the data\n\nLet's take a look at some of the data.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"0c7d7327-d1e0-48b7-af90-9963d0d8dad1"},{"version":"CommandV1","origId":503877321548768,"guid":"716893a4-8224-4eb8-b368-30221a0928a3","subtype":"command","commandType":"auto","position":7.0,"command":"base_rdd.take(10)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"96157a1e-1080-4fde-845c-e25b5b4fa59e"},{"version":"CommandV1","origId":503877321548769,"guid":"f61d0bb6-f9be-48ef-934f-f2dfc80be0e2","subtype":"command","commandType":"auto","position":8.0,"command":"%md Okay, there's a header. We'll need to remove that. But, since the file will be split into partitions, we can't just drop the first item. Let's figure out another way to do it.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"eb8acaf0-81e2-40a0-9730-edb53fa5a763"},{"version":"CommandV1","origId":503877321548770,"guid":"6f892f2f-d53d-49e6-8315-9df5c8b71d48","subtype":"command","commandType":"auto","position":9.0,"command":"no_header_rdd = base_rdd.filter(lambda line: 'REPORTDATETIME' not in line)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"89a6f895-ff26-43dd-a32d-671f156d0a9b"},{"version":"CommandV1","origId":503877321548771,"guid":"26c0dc79-fdb3-493a-ad00-6d9abfa06532","subtype":"command","commandType":"auto","position":10.0,"command":"no_header_rdd.take(10)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"ec83925d-20ef-45a9-aeaa-958691f0b649"},{"version":"CommandV1","origId":503877321548772,"guid":"da8d6a4f-2389-4aea-8cbe-2fed10e12cab","subtype":"command","commandType":"auto","position":11.0,"command":"%md \n### Exercise 1\n\nLet's make things a little easier to handle, by converting the `no_header_rdd` to an RDD containing Python objects.\n\n**TO DO**\n\n* Split each line into its individual cells.\n* Map the RDD into another RDD of appropriate `namedtuple` objects.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"a507324e-9865-43bb-901d-6a0475eff28f"},{"version":"CommandV1","origId":503877321548773,"guid":"68b2eeac-1a7a-40f2-8b46-2b4457346f53","subtype":"command","commandType":"auto","position":12.0,"command":"# Replace the <FILL-IN> sections with appropriate code.\n\n# TAKE NOTE: We are deliberately only keeping the first five fields of\n# each line, since that's all we're using in this lab. There's no sense\n# in dragging around more data than we need.\nCrimeData = namedtuple('CrimeData', ['ccn', 'report_time', 'shift', 'offense', 'method'])\n\ndef map_line(line):\n  columns = <FILL-IN>\n  return <FILL-IN>\n\ndata_rdd = no_header_rdd.map(map_line)\nprint data_rdd.take(10)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"4acebf3c-a1b7-48d9-a18d-e34d8e75c9fd"},{"version":"CommandV1","origId":503877321548774,"guid":"5a3313c4-3c87-42db-ab81-8fc0baafbc49","subtype":"command","commandType":"auto","position":13.0,"command":"%md \n### Exercise 2\n\nNext, group the data by type of crime (the \"OFFENSE\" column).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"e2d5d9bd-3a40-40ef-800b-507c8f0cf7c0"},{"version":"CommandV1","origId":503877321548775,"guid":"f35c54f6-a6c7-4180-923d-041d278762bb","subtype":"command","commandType":"auto","position":14.0,"command":"grouped_by_offense_rdd = data_rdd.groupBy(lambda data: <FILL-IN>)\n\n# What does this return? You'll need to know for the next step.\nprint grouped_by_offense_rdd.take(10)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"bc16e016-523f-4754-b481-929a7cbe851e"},{"version":"CommandV1","origId":503877321548776,"guid":"ac0444de-23b8-40b2-a05a-5890f76ec906","subtype":"command","commandType":"auto","position":15.0,"command":"%md \n### Exercise 3\nNext, create an RDD that counts the number of each offense. How many murders were there in the period covered by the data? How many assaults with a dangerous weapon?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"af4a5f7f-49a9-42db-86fa-c7796c29a14d"},{"version":"CommandV1","origId":503877321548777,"guid":"83a2895d-3015-474c-b8d5-16be4aa7ad06","subtype":"command","commandType":"auto","position":16.0,"command":"offense_counts = <FILL-IN>\nfor offense, count in <FILL-IN>:\n  print \"{0:30s} {1:d}\".format(offense, count)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"460fb962-153e-4191-9453-ce382d69733a"},{"version":"CommandV1","origId":503877321548778,"guid":"072db3f7-8985-49bf-a61c-d81e0f11a526","subtype":"command","commandType":"auto","position":17.0,"command":"%md ### Question\n\nRun the following cell. Can you explain what happened? Is `collectAsMap()` a _transformation_ or an _action_?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"c11807c6-924f-4b2a-acf4-7310c4128da5"},{"version":"CommandV1","origId":503877321548779,"guid":"7db4dcfb-aa80-4859-83ca-038750ab23ce","subtype":"command","commandType":"auto","position":18.0,"command":"grouped_by_offense_rdd.collectAsMap()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"32edd4ca-3b70-4a64-b136-6768d432c8f3"},{"version":"CommandV1","origId":503877321548780,"guid":"d014bc12-bfa2-4e2c-8800-aa4901afc2f2","subtype":"command","commandType":"auto","position":19.0,"command":"%md \n### Exercise 4\n\nHow many partitions does the base RDD have? What about the `grouped_by_offense` RDD? How can you find out?\n\n**Hint**: Check the [API documentation](http://spark.apache.org/docs/latest/api/python/pyspark.html#pyspark.RDD).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"4a8ba78d-5282-4808-b790-24f1ced96088"},{"version":"CommandV1","origId":503877321548781,"guid":"b25fc887-4dd4-47b4-8907-e48b57f63c56","subtype":"command","commandType":"auto","position":20.0,"command":"print base_rdd.<FILL-IN>\nprint grouped_by_offense_rdd.<FILL-IN>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"0b81b623-7330-43d1-a620-6277486405b7"},{"version":"CommandV1","origId":503877321548782,"guid":"117bb32b-43a5-457c-9c16-cc9c37fbc6b8","subtype":"command","commandType":"auto","position":21.0,"command":"%md \n### Exercise 5\n\nSince we're continually playing around with this data, we might as well cache it, to speed things up.\n\n**Question**: Which RDD should you cache? \n\n1. `base_rdd`\n2. `no_header_rdd`\n3. `data_rdd`\n4. None of them, because they're all still too big.\n5. It doesn't really matter.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"941806b1-6664-43f3-a260-597598f61d40"},{"version":"CommandV1","origId":503877321548783,"guid":"78310081-03a4-4038-8a0f-9b157fcdb8a2","subtype":"command","commandType":"auto","position":22.0,"command":"<FILL-IN>.cache().count() # Why did I put count() here?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"cfaa3445-ed72-452f-8a63-b5885bc56332"},{"version":"CommandV1","origId":503877321548784,"guid":"e82ee919-919a-4f5b-86e7-afd613325426","subtype":"command","commandType":"auto","position":23.0,"command":"%md ### Exercise 6\n\nDisplay the number of homicides by weapon (method).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"499a2c65-80e4-4585-a24d-95b7476ba154"},{"version":"CommandV1","origId":503877321548785,"guid":"3b3af1ee-ae99-41f5-bbef-62e52d2838a7","subtype":"command","commandType":"auto","position":24.0,"command":"result_rdd1 = data_rdd.<FILL-IN>\nprint result_rdd1.collect()\n\n# BONUS: Make the output look better, using a for loop or a list comprehension.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"d65fd4bc-f422-4fa3-acfd-4ee15be82a32"},{"version":"CommandV1","origId":503877321548786,"guid":"09e7560d-51c4-4bcf-a355-1c7cf4bc3ad5","subtype":"command","commandType":"auto","position":25.0,"command":"%md \n### Exercise 7\n\nDuring which police shift did the most crimes occur in the period covered by the data?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"1c006fa4-6cfb-419e-bc16-7edebefe79ca"},{"version":"CommandV1","origId":503877321548787,"guid":"81337ed0-09eb-4bad-9923-06d651649923","subtype":"command","commandType":"auto","position":26.0,"command":"# Hint: Start with the data_rdd\nprint data_rdd.<FILL-IN>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"14fd4500-3dc5-4a50-9452-5624af88f760"},{"version":"CommandV1","origId":503877321548788,"guid":"8d8538b7-8787-4c64-b454-7dd33418c0fc","subtype":"command","commandType":"auto","position":27.0,"command":"%md ### Demonstration\n\nLet's plot murders by month. DataFrames are useful for this one.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"7694d83f-b9c4-4092-aaf5-b92c7080e479"},{"version":"CommandV1","origId":503877321548789,"guid":"9572ebc6-9c8f-41f6-8c02-1e437518e655","subtype":"command","commandType":"auto","position":28.0,"command":"%md To do this properly, we'll need to parse the dates. That will require knowing their format. A quick sampling of the data will help.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"0795fdcf-dda1-46ca-b388-438fb6ddf8d1"},{"version":"CommandV1","origId":503877321548790,"guid":"838562c0-678f-4068-be76-3b048284e8c4","subtype":"command","commandType":"auto","position":29.0,"command":"data_rdd.map(lambda item: item.report_time).take(30)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"4f1ad4cc-ea72-442c-a6bb-eef3c57c7bb5"},{"version":"CommandV1","origId":503877321548791,"guid":"d6d6d168-67bc-4cff-926d-1d8e663c1877","subtype":"command","commandType":"auto","position":30.0,"command":"%md Okay. We can now create a [`strptime()` format string](https://docs.python.org/2.7/library/datetime.html?highlight=strptime#datetime.datetime.strptime), allowing us to use the `datetime.datetime` Python class to parse those strings into actual datetime values.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"57a6bb28-5beb-4b95-a1a1-b4a3b533ee52"},{"version":"CommandV1","origId":503877321548792,"guid":"f9bd26c7-510e-494d-bf0a-715ef39d2b7d","subtype":"command","commandType":"auto","position":31.0,"command":"from datetime import datetime\ndate_format = \"%m/%d/%Y %I:%M:%S %p\"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"83abaaa3-160f-4cbd-915d-9f7636c98426"},{"version":"CommandV1","origId":503877321548793,"guid":"9c02532e-6739-4926-afcb-4ea0837127d2","subtype":"command","commandType":"auto","position":32.0,"command":"%md Now, we can create the data frame. We'll start with the `no_header_rdd` and map it slightly differently than we did to create `data_rdd`:","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"2a950b1b-d4a0-4d8c-a586-cb1821b4ebcf"},{"version":"CommandV1","origId":503877321548794,"guid":"e64998f3-8eed-4bde-b92a-a59726c05ec2","subtype":"command","commandType":"auto","position":33.0,"command":"from pyspark.sql.types import *\ndef make_row(cd):\n  report_time = datetime.strptime(cd.report_time, date_format)\n  return CrimeData(\n    ccn=cd.ccn,\n    report_time=report_time,\n    shift=cd.shift,\n    offense=cd.offense,\n    method=cd.method\n  )\n\ndf = data_rdd.map(make_row).toDF()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"67316d7a-524e-45a0-b26c-a53b7085ad2a"},{"version":"CommandV1","origId":503877321548795,"guid":"a5753862-f713-4ad6-bf38-fb5b62422b5c","subtype":"command","commandType":"auto","position":34.0,"command":"df.printSchema()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"12ffd10a-cbf8-4371-b2b3-2b22f1798d0a"},{"version":"CommandV1","origId":503877321548796,"guid":"aeaed9c7-879f-49dd-a203-32025cb142f5","subtype":"command","commandType":"auto","position":35.0,"command":"display(df)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"1e48af64-43f8-42e5-97a0-f870bc5ad795"},{"version":"CommandV1","origId":503877321548797,"guid":"faea3093-1e60-4047-949f-d4df46012415","subtype":"command","commandType":"auto","position":36.0,"command":"%md Let's use the SQL \n<a href=\"http://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.functions.month\" target=\"_blank\"><tt>month</tt></a>\nfunction to extract the month. Note that the months are 1-indexed in Python.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"7746b4e4-fa92-4a40-bf9f-bd2a0dca8020"},{"version":"CommandV1","origId":503877321548798,"guid":"fd46f7e5-f544-469b-a20c-297eda7b2ba9","subtype":"command","commandType":"auto","position":37.0,"command":"from pyspark.sql.functions import *\ndf_with_month = df.select(df[\"*\"], month(df[\"report_time\"]).alias(\"month\"))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"4eb5fa0d-6a74-425b-8ede-eeef3d540ca3"},{"version":"CommandV1","origId":503877321548799,"guid":"2fab49a0-bc0e-4e50-a025-0152898beab7","subtype":"command","commandType":"auto","position":38.0,"command":"display( \n  df_with_month.filter(df_with_month['offense'] == 'HOMICIDE')\n               .select(df_with_month[\"month\"], df_with_month['offense'])\n               .groupBy('month').count()\n)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"5f2f305b-3d76-4722-afa6-4ce998569977"},{"version":"CommandV1","origId":503877321548800,"guid":"8d9e884e-71da-4da5-b670-0d70bfc40dca","subtype":"command","commandType":"auto","position":39.0,"command":"%md What about all crimes per month?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"86fef6af-0495-4109-b244-58826e1c1a51"},{"version":"CommandV1","origId":503877321548801,"guid":"c6ae5e9a-529b-42cb-82f2-3a70bda3e5a1","subtype":"command","commandType":"auto","position":40.0,"command":"display(\n  df_with_month.select(df_with_month['month']).groupBy('month').count()\n)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"8efa999e-7abf-48bf-83ba-76dd157fc000"},{"version":"CommandV1","origId":503877321548802,"guid":"4eb8f912-54c1-46cd-a776-78b5d771c2c8","subtype":"command","commandType":"auto","position":41.0,"command":"%md We can also plot the frequency of crimes by hour of day.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"a9c3ed64-8464-4a6a-8fd4-8b5551e7895c"},{"version":"CommandV1","origId":503877321548803,"guid":"072263a6-3755-44bc-8529-6badcb5b5c7b","subtype":"command","commandType":"auto","position":42.0,"command":"display(\n  df.select(hour(df[\"report_time\"]).alias(\"hour\"), df[\"offense\"]).groupBy(\"hour\").count()\n)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"87d3adef-6b23-49ca-8f62-e891a34747d9"},{"version":"CommandV1","origId":503877321548804,"guid":"4876cec1-c08b-4082-a5d9-444f27576911","subtype":"command","commandType":"auto","position":43.0,"command":"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"4bd323dc-8272-4cb0-b935-05606410466a"}],"dashboards":[],"guid":"6c149e38-4943-495b-928e-be39224a9844","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}