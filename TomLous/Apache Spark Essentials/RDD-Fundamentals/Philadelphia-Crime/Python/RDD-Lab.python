{"version":"NotebookV1","origId":503877321548626,"name":"RDD-Lab","language":"python","commands":[{"version":"CommandV1","origId":503877321548628,"guid":"79e6b528-7f57-4254-92e1-ce7b0d2f83f1","subtype":"command","commandType":"auto","position":1.0,"command":"%md\n# RDD Lab (Python)\n\nIn this lab, we'll explore some of the RDD concepts we've discussed. We'll be using a data set consisting of reported crimes in Philadelphia in 2013. We'll use this data to explore some RDD transitions and actions.\n\n## Exercises and Solutions\n\nThis notebook contains a number of exercises. Use the \n<a href=\"http://spark.apache.org/docs/1.6.1/api/python/pyspark.html#pyspark.RDD\" target=\"_blank\">RDD API documentation</a>\nto look up transformations and actions. If, at any point, you're struggling with the solution to an exercise, feel free to look in the **Solutions** notebook (in the same folder as this lab).\n\n## Let's get started.\n\nFirst, let's import a couple things we'll need.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"38b2b1ad-8cf9-4fc9-a1b9-28e9191ba10f"},{"version":"CommandV1","origId":503877321548629,"guid":"fcadf208-c8ac-4b7e-9679-22a6ecc69570","subtype":"command","commandType":"auto","position":2.0,"command":"from collections import namedtuple\nfrom pprint import pprint","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"0f601346-4d8b-4766-96db-d48fd7f86981"},{"version":"CommandV1","origId":503877321548630,"guid":"7d00344c-66cd-4ff2-ab53-7d151c068364","subtype":"command","commandType":"auto","position":3.0,"command":"%md\n## Load the data\n\nThe next step is to load the data. Run the following cell to create an RDD containing the data.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"e06e5f1c-0c76-4a4f-9607-6810a6bca0bc"},{"version":"CommandV1","origId":503877321548631,"guid":"0b134375-8b5c-47ee-bf94-6eb4cac828a8","subtype":"command","commandType":"auto","position":4.0,"command":"base_rdd = sc.textFile(\"dbfs:/mnt/training/philadelphia-crime-data-2015-ytd.csv\")","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"66c9c7cc-f564-44bf-bcc0-23e0594bc340"},{"version":"CommandV1","origId":503877321548632,"guid":"a151e1a2-1079-41a0-a2f5-83afc192f5c9","subtype":"command","commandType":"auto","position":5.0,"command":"%md \n\n### Question 1\n\nDoes the RDD _actually_ contain the data right now?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"b8607332-b66a-4950-9b2e-e7c33dca0539"},{"version":"CommandV1","origId":503877321548633,"guid":"c1378f93-536b-49d1-9ee2-be65a6f4c6bb","subtype":"command","commandType":"auto","position":6.0,"command":"%md\n## Explore the data\n\nLet's take a look at some of the data.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"358464c2-1fc1-44c3-9ab1-547d06609928"},{"version":"CommandV1","origId":503877321548634,"guid":"ee32b20f-aaea-4465-a47f-2a867ae8edd3","subtype":"command","commandType":"auto","position":7.0,"command":"base_rdd.take(10)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"a228aa25-6c60-4ba6-b5e4-b9f0d6a3aa14"},{"version":"CommandV1","origId":503877321548635,"guid":"afacbdaf-6ca3-4d8d-8e66-d85fac13c788","subtype":"command","commandType":"auto","position":8.0,"command":"%md Okay, there's a header. We'll need to remove that. But, since the file will be split into partitions, we can't just drop the first item. Let's figure out another way to do it.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"5519395b-3106-48bd-a2f5-3321d41199e0"},{"version":"CommandV1","origId":503877321548636,"guid":"e6d33413-3c6c-4064-93eb-1de9ce621fbf","subtype":"command","commandType":"auto","position":9.0,"command":"no_header_rdd = base_rdd.filter(lambda line: 'DC_DIST' not in line)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"1521bee1-19e1-40f6-87db-ed0781d0c85c"},{"version":"CommandV1","origId":503877321548637,"guid":"a1c3d256-1aa5-4673-8060-77fc79e9ad23","subtype":"command","commandType":"auto","position":10.0,"command":"no_header_rdd.take(10)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"ad1a2a90-8a64-4049-8758-b12152a75555"},{"version":"CommandV1","origId":503877321548638,"guid":"d00f300c-9b54-4f0f-b4ce-9799f6093a32","subtype":"command","commandType":"auto","position":11.0,"command":"%md\n### Metadata\n\nAccording to the Open Data Philly site, here's what some of those fields actually mean:\n\nKey attribute field names and descriptions\n\n* `DC_DIST` (integer): District number\n* `SECTOR` (integer): Sector or PSA Number\n* `DISPATCH_DATE` (date string): Date of Incident (modified from original data)\n* `DISPATCH_TIME` (time string): Time of Incident (modified from original data)\n* `DC_KEY`: (text): Unique ID of each crime\n* `UCR_General` (integer): Rounded Crime Code\n* `TEXT_GENERAL_CODE` (string): Human-readable Crime Code\n* `OBJECTID` (integer): Unique row ID\n* `POINT_X` (decimal): Latitude where crime occurred\n* `POINT_Y` (decimal): Longitude where crime occurred","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"748cfcfb-3224-4c59-b597-1cc29334ccc2"},{"version":"CommandV1","origId":503877321548639,"guid":"ca9edac7-f1cb-45d7-9c18-13b006dd6d07","subtype":"command","commandType":"auto","position":12.0,"command":"%md \n### Exercise 1\n\nLet's make things a little easier to handle, by converting the `no_header_rdd` to an RDD containing Python objects.\n\n**TO DO**\n\n* Split each line into its individual cells.\n* Map the RDD into another RDD of appropriate `namedtuple` objects.\n* You'll have to decide which fields from the data best map onto the fields of the case class.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"c8ce6e3f-e4f9-4eac-b13b-8ff7ae736890"},{"version":"CommandV1","origId":503877321548640,"guid":"ac0f47e0-6eda-40dd-8094-c3b3ff3963a2","subtype":"command","commandType":"auto","position":13.0,"command":"# Replace the <FILL-IN> sections with appropriate code.\n\n# TAKE NOTE: We are deliberately only keeping the first five fields of\n# each line, since that's all we're using in this lab. There's no sense\n# in dragging around more data than we need.\nCrimeData = namedtuple('CrimeData', ['date_string', 'time_string', 'offense', 'latitude', 'longitude'])\n\ndef map_line(line):\n  columns = << FILL THIS IN >>\n  return << FILL THIS IN >>\n\ndata_rdd = no_header_rdd.map(map_line)\nprint data_rdd.take(10)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"9c489d48-af0a-4d98-8ecd-51e44126e485"},{"version":"CommandV1","origId":503877321548641,"guid":"2123d50f-0444-4cff-bc4d-d6981139ed48","subtype":"command","commandType":"auto","position":14.0,"command":"%md \n### Exercise 2\n\nNext, group the data by type of crime (the \"OFFENSE\" column).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"81d97d0b-e7ac-42fb-a372-8fa71c3b0745"},{"version":"CommandV1","origId":503877321548642,"guid":"b57a5ea5-b62c-4319-8f7e-a02761c0f50e","subtype":"command","commandType":"auto","position":15.0,"command":"grouped_by_offense_rdd = data_rdd.<< FILL THIS IN >>\n\n# What does this return? You'll need to know for the next step.\nprint grouped_by_offense_rdd.take(10)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"cad88d93-e6ee-448b-b8c2-536caa762f00"},{"version":"CommandV1","origId":503877321548643,"guid":"5a46957d-79ea-4555-b37e-296210569783","subtype":"command","commandType":"auto","position":16.0,"command":"%md\n## ETL\nThere's some junk in our data. Let's clean it up a bit.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"3882a0b2-ea6e-4d6b-93bf-3d29b5a6ffb1"},{"version":"CommandV1","origId":503877321548644,"guid":"327e62fe-378c-461e-a88b-c3d4a305fbc5","subtype":"command","commandType":"auto","position":17.0,"command":"import re\n\nBAD_OFFENSE_RE = re.compile(r'^\\d+$')\n\ndef clean_offense(d):\n  d = CrimeData(date_string=d.date_string, \n                time_string=d.time_string,\n                offense=d.offense.replace('\"', '').strip(),\n                latitude=d.latitude,\n                longitude=d.longitude)\n  return d\ncleaned_rdd = data_rdd.map(clean_offense).filter(lambda d: BAD_OFFENSE_RE.search(d.offense) is None)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"c32fb065-fb02-462c-b3cb-cd035c42a155"},{"version":"CommandV1","origId":503877321548645,"guid":"847ef561-cd80-4e5a-bfc1-c3e3fe3a327c","subtype":"command","commandType":"auto","position":18.0,"command":"%md\nNext, copy the `groupBy` logic, above, but change it to run against the `cleanedRDD`.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"bc8a54c5-875e-4e57-8e52-9985a10a1c32"},{"version":"CommandV1","origId":503877321548646,"guid":"38cf8d1f-a39e-4843-9171-8f38e27dff9b","subtype":"command","commandType":"auto","position":19.0,"command":"grouped_by_offense_rdd2 = cleaned_rdd.groupBy(<< FILL THIS IN >>)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"630e8c91-149c-4a26-b3ee-5e4191f8764d"},{"version":"CommandV1","origId":503877321548647,"guid":"5083be91-3d91-4028-b532-9cc3618b561c","subtype":"command","commandType":"auto","position":20.0,"command":"%md \n### Exercise 3\nNext, create an RDD that counts the number of each offense. How many murders were there in 2013? How many assaults with a dangerous weapon?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"a6de3aea-f015-4a15-a17f-d1cb530edc5c"},{"version":"CommandV1","origId":503877321548648,"guid":"fb13eb71-de70-4750-b21e-d4789fcd17c5","subtype":"command","commandType":"auto","position":21.0,"command":"offense_counts = << FILL THIS IN >>\nfor offense, count in << FILL THIS IN >>:\n  print \"{0:30s} {1:d}\".format(offense, count)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"2698662a-451e-4702-924c-7ccb6264e71e"},{"version":"CommandV1","origId":503877321548649,"guid":"6f6715a2-0dc9-4691-9d7b-14f3cecc8ba4","subtype":"command","commandType":"auto","position":22.0,"command":"%md ### Question\n\nRun the following cell. Can you explain what happened? Is `collectAsMap()` a _transformation_ or an _action_?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"7516b18a-54b5-4acd-aea4-44a8bdd363bb"},{"version":"CommandV1","origId":503877321548650,"guid":"8fa3e2c3-6558-43b8-8af0-b2ffa08bd845","subtype":"command","commandType":"auto","position":23.0,"command":"grouped_by_offense_rdd.collectAsMap()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"88ca1ccd-b94e-4a72-86e9-e837d035faf2"},{"version":"CommandV1","origId":503877321548651,"guid":"4649c182-6cc9-461d-ac59-e805b5625d83","subtype":"command","commandType":"auto","position":24.0,"command":"%md \n### Exercise 4\n\nHow many partitions does the base RDD have? What about the `grouped_by_offense` RDD? How can you find out?\n\n**Hint**: Check the [API documentation](http://spark.apache.org/docs/latest/api/python/pyspark.html#pyspark.RDD).","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"3790afcb-462c-48e6-836d-d3c9c52bbbb9"},{"version":"CommandV1","origId":503877321548652,"guid":"7701c884-330b-4f6c-9d0f-3ec4006e2495","subtype":"command","commandType":"auto","position":25.0,"command":"print base_rdd.<< FILL THIS IN >>\nprint grouped_by_offense_rdd2.<< FILL THIS IN >>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"8deb0d83-56ba-48e0-9429-20bc6d823d28"},{"version":"CommandV1","origId":503877321548653,"guid":"898208cc-4714-4524-9707-5a8deba6ac71","subtype":"command","commandType":"auto","position":26.0,"command":"%md \n### Exercise 5\n\nSince we're continually playing around with this data, we might as well cache it, to speed things up.\n\n**Question**: Which RDD should you cache? \n\n1. `base_rdd`\n2. `no_header_rdd`\n3. `data_rdd`\n4. `cleaned_rdd`\n5. `grouped_by_offense_rdd2`\n6. None of them, because they're all still too big.\n7. It doesn't really matter.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"0bf35603-6de7-4bcd-a8ab-355505d40a45"},{"version":"CommandV1","origId":503877321548654,"guid":"4b77e268-fbab-45d3-87a0-3a96aa047f5c","subtype":"command","commandType":"auto","position":27.0,"command":"<FILL-IN>.cache()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"ba0b8793-259a-4898-aa3d-786cc479918a"},{"version":"CommandV1","origId":503877321548655,"guid":"2496b3fe-6635-4c0b-aa49-81e61b5e170a","subtype":"command","commandType":"auto","position":28.0,"command":"%md ### Exercise 6\n\nDisplay the number of homicides.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"ce4c577c-3cde-46cd-b221-f3cdf55ee140"},{"version":"CommandV1","origId":503877321548656,"guid":"0e60c26d-0275-445c-9d45-225fe92ab043","subtype":"command","commandType":"auto","position":29.0,"command":"result_rdd1 = data_rdd.<FILL-IN>\nprint result_rdd1.collect()\n\n# BONUS: Make the output look better, using a for loop or a list comprehension.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"cc9ee630-1f94-4c98-a52d-f81a01ca85bf"},{"version":"CommandV1","origId":503877321548657,"guid":"76dc02af-26bc-4406-a0a6-3318f71e3ce8","subtype":"command","commandType":"auto","position":30.0,"command":"result_rdd1 = cleaned_rdd.filter(lambda d: \"homicide\" in d.offense.lower()).map(lambda d: (d.offense, 1)).reduceByKey(lambda a, b: a + b)\n\nfor method, count in result_rdd1.collect():\n  print \"{0} {1:d}\".format(method, count)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"c4bcf304-ce18-49b9-8540-f15c15ae32f3"},{"version":"CommandV1","origId":503877321548658,"guid":"4a2d35bb-6281-41f1-9166-ac4f0e7b4615","subtype":"command","commandType":"auto","position":31.0,"command":"%md ### Demonstration\n\nLet's plot murders by month. DataFrames are useful for this one.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"a9c0f6f2-cb46-4f7a-a034-39251c87da2a"},{"version":"CommandV1","origId":503877321548659,"guid":"709df583-8b46-452d-84cb-9d6699172da6","subtype":"command","commandType":"auto","position":32.0,"command":"%md To do this property, we'll need to parse the dates. That will require knowing their format. A quick sampling of the data will help.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"9cc17c93-a11a-4d62-95a7-a13aa2b39d07"},{"version":"CommandV1","origId":503877321548660,"guid":"2d978417-8db1-43d8-933f-65f6d2f82e70","subtype":"command","commandType":"auto","position":33.0,"command":"cleaned_rdd.map(lambda item: item.date_string).take(30)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"215c1566-8672-4e26-9c29-1158d8398676"},{"version":"CommandV1","origId":503877321548661,"guid":"0b9b6444-6f0c-4343-9ce3-b0db9b7e4c7e","subtype":"command","commandType":"auto","position":34.0,"command":"%md Okay. We can now create a [`strptime()` format string](https://docs.python.org/2.7/library/datetime.html?highlight=strptime#datetime.datetime.strptime), allowing us to use the `datetime.datetime` Python class to parse those strings into actual datetime values.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"05f1a216-832c-4907-9d6c-3634fe99a42c"},{"version":"CommandV1","origId":503877321548662,"guid":"f49be297-4c42-4d72-96c7-c3bef0c17086","subtype":"command","commandType":"auto","position":35.0,"command":"from datetime import datetime\ndate_format = \"%Y-%m-%d\"\ntime_format = \"%H:%M:%S\"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"3f11cb1a-2a18-40f5-b500-1388771ae914"},{"version":"CommandV1","origId":503877321548663,"guid":"bd5fb777-ccdb-491d-bcbb-eb3fa6a0cceb","subtype":"command","commandType":"auto","position":36.0,"command":"%md Now, we can create the data frame. We'll start with the `no_header_rdd` and map it slightly differently than we did to create `data_rdd`:","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"c0bba14c-86f5-412b-b07c-c5374d54a490"},{"version":"CommandV1","origId":503877321548664,"guid":"24b2e20d-cf75-4dd9-8b56-ae695229c630","subtype":"command","commandType":"auto","position":37.0,"command":"from pyspark.sql.types import *\nfrom decimal import Decimal\n\nCrimeData2 = namedtuple('CrimeData2', ['date', 'time', 'offense', 'latitude', 'longitude'])\n\ndef parse_date_time(fmt, s, split_on=None):\n  if split_on:\n    s = s.split(split_on)[0]\n  try:\n    return datetime.strptime(s, fmt)\n  except:\n    return None\n  \ndef parse_lat_long(s):\n  try:\n    return Decimal(s)\n  except:\n    return None\n  \ndef make_row(line):\n  cols = line.split(\",\")\n  return CrimeData2(date      = parse_date_time(date_format, cols[10]),\n                    time      = parse_date_time(time_format, cols[11], split_on=\".\"),\n                    offense   = cols[6],\n                    latitude  = parse_lat_long(cols[7]),\n                    longitude = parse_lat_long(cols[8]))\n\ndef clean_offense2(d):\n  d = CrimeData2(date=d.date, \n                 time=d.time,\n                 offense=d.offense.replace('\"', '').strip(),\n                 latitude=d.latitude,\n                 longitude=d.longitude)\n  return d\n\ndf = (no_header_rdd.map(make_row).\n      map(clean_offense2).\n      filter(lambda d: BAD_OFFENSE_RE.search(d.offense) is None).\n      toDF())","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"fed61bf4-16ea-47b0-92ee-98f5ca527ec9"},{"version":"CommandV1","origId":503877321548665,"guid":"cabe6547-c919-422b-b8e3-086c133f0f77","subtype":"command","commandType":"auto","position":38.0,"command":"df.printSchema()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"0b2271d6-f043-473e-b189-c6604980fb57"},{"version":"CommandV1","origId":503877321548666,"guid":"1508e6f1-152a-4e5a-a357-6a361879d937","subtype":"command","commandType":"auto","position":39.0,"command":"%md Let's use a user-defined function (something supported by DataFrames and Spark SQL) to give us a `month` function we can use to extract just the month part of a `Timestamp`.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"2939a3e4-49e3-4eb0-9d2e-09869bb92002"},{"version":"CommandV1","origId":503877321548667,"guid":"56487259-bbd7-4a51-92b5-ca6b831a2d9d","subtype":"command","commandType":"auto","position":40.0,"command":"from pyspark.sql.functions import *\ndisplay( \n  df.filter(lower(df['offense']).like('%homicide%'))\n    .select(month(df['date']).alias(\"month\"), df['offense'])\n    .groupBy('month').count()\n)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"99fc1972-a105-4e18-9dcd-dca8ec8c6cfb"},{"version":"CommandV1","origId":503877321548668,"guid":"22cfd63c-4b82-438f-8c97-cafa95c8a54b","subtype":"command","commandType":"auto","position":41.0,"command":"%md What about all crimes per month?","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"3066bb99-d403-4e2e-a01d-fb4af75c8b10"},{"version":"CommandV1","origId":503877321548669,"guid":"b63d35fa-5c8a-49f9-82f9-60169eee0266","subtype":"command","commandType":"auto","position":42.0,"command":"display(\n  df.select(month(df['date']).alias('month'))\n    .groupBy('month').count()\n)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"64672894-df24-46d6-861c-9fcdd1ff7a64"},{"version":"CommandV1","origId":503877321548670,"guid":"53b052e7-7f17-4585-9a8d-c808af5f6c53","subtype":"command","commandType":"auto","position":43.0,"command":"%md We can also plot the frequency of crimes by hour of day.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"97e9d8e0-8970-415a-adf6-6454275a6f7b"},{"version":"CommandV1","origId":503877321548671,"guid":"3601485d-6991-45f3-bf4c-ab177eaca15a","subtype":"command","commandType":"auto","position":44.0,"command":"display(\n  df.select(hour(df[\"time\"]).alias(\"hour\"), df[\"offense\"]).groupBy(\"hour\").count()\n)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"9b53d0d3-27c7-4b93-9d4d-b5c533ce9920"},{"version":"CommandV1","origId":503877321548672,"guid":"b4df2023-8b52-4208-b616-54ce955ddd9e","subtype":"command","commandType":"auto","position":45.0,"command":"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0.0,"submitTime":0.0,"finishTime":0.0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"nuid":"3aef76d3-f19a-4c52-8594-004817013ac7"}],"dashboards":[],"guid":"8d7a13f5-d2c2-4cd3-8a0d-9687b257f5bc","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}